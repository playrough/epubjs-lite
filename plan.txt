// not empty
/*
epubjs-lite (EPUB3-only) — Kế hoạch dự án vừa học vừa làm (inspired by epub.js)

Mục tiêu
- Tạo library đọc EPUB3 tối giản, kiến trúc và API giống epub.js ở mức hợp lý, dùng JS thuần và JSZip.
- Hỗ trợ reflowable trước; fixed-layout xem xét sau.
- Ưu tiên học-by-doing qua các milestone rõ ràng.

Công nghệ và phạm vi
- Vanilla JS + ES Modules.
- JSZip (qua CDN trong examples) để đọc .epub (zip).
- Không xử lý DRM, media overlays, annotations nâng cao ở giai đoạn đầu.
- Parser EPUB3: container.xml, OPF, Navigation Document (nav xhtml).

Kiến trúc (tương tự epub.js, rút gọn)
- Core lớp chính:
  - Book: điều phối, load .epub, parse, expose API (renderTo, display, navigation).
  - Rendition: quản lý hiển thị (iframe-based), display/next/prev, theme.
  - Spine: reading order từ OPF.
  - ResourceStore: đọc resource từ zip, cache.
  - Events: EventEmitter tối giản.
- Parsers:
  - ContainerParser: META-INF/container.xml -> rootfile OPF.
  - OPFParser: metadata, manifest, spine.
  - NavParser (EPUB3): parse Navigation Document -> toc tree.
  - XML utils.
- Views:
  - ViewManager: điều phối iframe(s), resize, pagination cơ bản.
  - View: hiển thị một spine item, inject CSS/theme.
- Locations:
  - Pagination: tính số trang, currentPage.
  - CFI tối giản: biểu diễn/jump vị trí cơ bản.
- Store/Utils:
  - ZipStore: JSZip adapter.
  - Request (tuỳ chọn) cho URL.
  - path/dom/mime helpers.

Cấu trúc thư mục đề xuất
- src/
  - core/
    - book.js
    - rendition.js
    - spine.js
    - resource.js
    - events.js
  - parsers/
    - container.js
    - opf.js
    - nav.js
    - xml.js
  - views/
    - manager.js
    - view.js
  - locations/
    - cfi.js
    - pagination.js
  - store/
    - zip.js
    - request.js
  - utils/
    - path.js
    - dom.js
    - mime.js
  - index.js
- examples/
  - basic/
    - index.html
    - main.js
- tests/ (sau)
- README.md

API dự kiến
- Book
  - static open(input, options?) // ArrayBuffer | File | URL (ưu tiên AB/File trước)
  - constructor(zipStore, options?)
  - async load() // container -> opf -> nav -> spine
  - renderTo(elementOrSelector, options?) -> Rendition
  - display(target?) // proxy qua rendition
  - get navigation() // toc
  - getResource(href)
- Rendition
  - display(target?) // href | cfi | spineIndex
  - next(), prev()
  - themes.register(name, css), themes.select(name)
  - on/once/off (Events)
- Parsers
  - ContainerParser.fromZip(zipStore) -> rootfilePath
  - OPFParser.parse(opfXml) -> { metadata, manifest, spine }
  - NavParser.parse(navXhtml) -> toc tree
- Store
  - ZipStore.fromArrayBuffer(buffer)
  - read(href) -> Promise<ArrayBuffer|string>
  - resolveHref(base, href)

Milestones (M1–M10)
- M1: Khởi tạo dự án
  - Tạo cấu trúc thư mục, `src/index.js` (export API rỗng), `core/events.js`.
  - Tạo `examples/basic` với JSZip CDN + skeleton HTML/JS.
- M2: Zip loader + Container
  - `store/zip.js`: from ArrayBuffer -> JSZip; `read(href)`.
  - `parsers/container.js`: đọc rootfile OPF từ META-INF/container.xml.
  - Demo: log rootfile trong example.
- M3: OPF parser + Spine
  - `parsers/opf.js`: parse metadata/manifest/spine.
  - `core/spine.js`: model spine items, normalize href relative OPF dir.
  - Demo: in danh sách spine trong example.
- M4: ResourceStore + MIME + resolve
  - `core/resource.js`, `utils/mime.js`, `utils/path.js`.
  - Đọc text/xhtml/css từ zip, inject base href.
- M5: Nav parser (EPUB3)
  - `parsers/nav.js`: parse xhtml nav -> toc tree.
  - Expose `book.navigation`.
- M6: Rendition cơ bản
  - `core/rendition.js`, `views/manager.js`, `views/view.js`.
  - Render spine item vào iframe, API `renderTo`, `display(href)`, `next/prev`.
- M7: Pagination tối giản
  - `locations/pagination.js`: tính pageCount theo container & content width.
  - Events: `relocated`, `rendered`, `layout`.
- M8: Themes
  - Đăng ký/chọn theme, inject CSS vào iframe.
- M9: CFI tối giản
  - `locations/cfi.js`: parse/generate cơ bản để jump vị trí.
- M10: Example + README
  - Example: upload .epub, render, next/prev, toc click, chọn theme.
  - README: API, kiến trúc, hạn chế, roadmap.

Hướng dẫn từng bước (triển khai)
- Bước 1: Khung dự án & example
  - Tạo thư mục như cấu trúc.
  - `examples/basic/index.html` (JSZip CDN) + `examples/basic/main.js` (type="module").
  - `src/index.js` export `{ Book }` (stub).
- Bước 2: EventEmitter & helpers
  - `core/events.js` (on/off/emit).
  - `parsers/xml.js` (parse string -> XML DOM, query helpers).
  - `utils/path.js` (join, dirname, resolveHref), `utils/mime.js` (map ext->mime).
- Bước 3: ZipStore + ContainerParser
  - `ZipStore.fromArrayBuffer(buffer)` trả instance và `read(href)`.
  - `ContainerParser.fromZip(zipStore)` -> OPF path.
- Bước 4: OPFParser + Spine
  - Đọc OPF từ zip, parse manifest/spine, normalize href theo thư mục OPF.
- Bước 5: NavParser
  - Tìm item có properties="nav" trong manifest, parse xhtml -> toc.
- Bước 6: Book tích hợp
  - `Book.open(input)` nhận ArrayBuffer/File (URL sau), gọi load pipeline.
  - Expose navigation, resources.
- Bước 7: Rendition cơ bản
  - `renderTo(el, options)`, `display(target)`, mount iframe.
- Bước 8: Pagination + events
  - Tính pageCount/currentPage; emit events.
- Bước 9: Themes
  - register/select CSS strings, inject.
- Bước 10: CFI cơ bản + polish
  - parse/generate shallow CFI, jump gần vị trí; viết README, hoàn thiện example.

Ví dụ API (dự kiến, ở examples/basic)
index.html:
<input type="file" id="file" accept=".epub" />
<div id="viewer" style="width:800px;height:600px;border:1px solid #ccc;"></div>
<button id="prev">Prev</button>
<button id="next">Next</button>
<script src="https://cdn.jsdelivr.net/npm/jszip@3.10.1/dist/jszip.min.js"></script>
<script type="module" src="./main.js"></script>

main.js:
import { Book } from '../../src/index.js';
const fileInput = document.getElementById('file');
const viewer = document.getElementById('viewer');
let book, rendition;
fileInput.addEventListener('change', async (e) => {
  const file = e.target.files[0];
  const arrayBuffer = await file.arrayBuffer();
  book = await Book.open(arrayBuffer);
  rendition = book.renderTo(viewer, { flow: 'paginated' });
  await rendition.display();
});
document.getElementById('next').onclick = () => rendition?.next();
document.getElementById('prev').onclick = () => rendition?.prev();

Ghi chú EPUB3
- Ưu tiên Navigation Document (xhtml nav), không cần NCX.
- Tôn trọng spine linear="no" (bỏ qua mặc định khi phân trang).
- Media-type mapping tiêu chuẩn.
- Chuẩn hoá href tương đối dựa trên thư mục OPF.

Kiểm thử thủ công
- Dùng vài .epub mẫu: reflowable đơn giản, nav nhiều cấp, có CSS/fonts.
- Checklist theo tiêu chí mỗi milestone.

Next steps
- Thực hiện M1 sau khi kế hoạch được ghi vào file.
*/